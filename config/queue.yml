default: &default
  dispatchers:
    - polling_interval: 2 # Check for "important" jobs every 2s
      batch_size: 100 # Smaller batches for quick processing
      queues: ["important"]
    - polling_interval: 5 # Check for "default" jobs every 5s
      batch_size: 500 # Larger batch size for efficiency
      queues: ["default"]
    - polling_interval: 10 # Check for "audio_optimization" jobs every 10s
      batch_size: 50 # Smaller batches for resource-intensive jobs
      queues: ["audio_optimization"]
    - polling_interval: 30 # Check for "low" jobs every 30s (less frequent for non-priority)
      batch_size: 1000 # Even larger batch size if jobs are quick and numerous
      queues: ["low"] # New low priority queue

  workers:
    - queues: ["important"] # Dedicated for important jobs
      threads: <%= (ENV.fetch("RAILS_MAX_THREADS") { 5 }).to_i - 2 %>
      processes: <%= ENV.fetch("JOB_CONCURRENCY") { 1 } %>
      polling_interval: 0.5 # Reduced frequency (every 0.5s)

    - queues: ["default"]
      threads: <%= (ENV.fetch("RAILS_MAX_THREADS") { 7 }).to_i - 2 %>
      processes: <%= ENV.fetch("JOB_CONCURRENCY") { 1 } %>
      polling_interval: 1.0 # Reduced frequency (every 1s)

    - queues: ["audio_optimization"] # Dedicated for audio optimization jobs
      threads: 2 # Limited threads for resource-intensive tasks
      processes: <%= ENV.fetch("AUDIO_JOB_CONCURRENCY") { 1 } %>
      polling_interval: 2.0 # Check every 2 seconds

