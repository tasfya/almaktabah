@import 'tailwindcss';

@theme {
  --font-sans: Segoe UI, Tahoma, Geneva, Verdana, sans-serif;
  --font-arabic: Amiri, Times New Roman, serif;

  --color-primary-50: #eff6ff;
  --color-primary-100: #dbeafe;
  --color-primary-200: #bfdbfe;
  --color-primary-300: #93c5fd;
  --color-primary-400: #60a5fa;
  --color-primary-500: #3b82f6;
  --color-primary-600: #2563eb;
  --color-primary-700: #1d4ed8;
  --color-primary-800: #1e40af;
  --color-primary-900: #1e3a8a;
}

@utility container {
  margin-inline: auto;
  padding-inline: 1rem;
  @media (width >= theme(--breakpoint-sm)) {
    padding-inline: 2rem;
  }
  @media (width >= theme(--breakpoint-lg)) {
    padding-inline: 4rem;
  }
  @media (width >= theme(--breakpoint-xl)) {
    padding-inline: 5rem;
  }
  @media (width >= theme(--breakpoint-2xl)) {
    padding-inline: 6rem;
  }
}

/*
  The default border color has changed to `currentcolor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentcolor);
  }

  input {
    color: black;
  }
}



/* Custom component styles */
@utility btn {
  @apply px-4 py-2 rounded-xs w-full font-medium transition-colors duration-200 flex items-center justify-center gap-1;
}
@utility btn-primary {
  @apply bg-gray-800 text-white hover:bg-gray-700 cursor-pointer;
}
@utility btn-secondary {
  @apply bg-white text-gray-900 hover:bg-gray-100 border border-gray-300 cursor-pointer;
}
@utility btn-link {
  @apply w-fit hover:underline cursor-pointer;
}
@utility btn-sm {
  @apply px-3 py-1.5 text-sm;
}
@utility badge {
  @apply inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium;
}
@utility badge-primary {
  @apply bg-gray-900 text-white;
}
@utility badge-secondary {
  @apply bg-gray-200 text-gray-800;
}
@utility badge-sm {
  @apply px-2 py-1 text-xs;
}
@utility card {
  @apply bg-white rounded-xs shadow-md border;
}
@utility card-header {
  @apply p-6 border-b border-gray-200;
}
@utility card-body {
  @apply p-6;
}
@utility card-footer {
  @apply p-6 border-t border-gray-200;
}
@utility audio-player {
  @apply bg-white border-t border-gray-200 shadow-lg;
}
@utility audio-progress {
  @apply h-1 bg-blue-600 transition-all duration-100;
}
@utility search-modal {
  backdrop-filter: blur(4px);
}
@utility flash-message {
  animation: slideInDown 0.3s ease-out;
}

/* Custom utility styles */
@utility text-balance {
  text-wrap: balance;
}
@utility rtl-space-x-reverse {
  & > :not([hidden]) ~ :not([hidden]) {
    --tw-space-x-reverse: 1;
    margin-right: calc(var(--tw-space-x) * var(--tw-space-x-reverse));
    margin-left: calc(var(--tw-space-x) * calc(1 - var(--tw-space-x-reverse)));
  }
}

/* Custom base styles */
@layer base {
  html {
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  }

  body {
    direction: rtl;
    text-align: right;
  }

  .container {
    @apply mx-auto px-4;
  }
}

/* Custom keyframes */
@layer utilities {
  @keyframes slideInDown {
    from {
      transform: translateY(-100%);
      opacity: 0;
    }

    to {
      transform: translateY(0);
      opacity: 1;
    }
  }
}


#audio-player-container .audio-player {
  animation: slideUp 0.3s ease-out;
}

@keyframes slideUp {
  from {
    transform: translateY(100%);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}


/* Responsive adjustments */
@media (max-width: 640px) {
  #audio-player-container .audio-player {
    margin-bottom: env(safe-area-inset-bottom, 0);
  }
}
